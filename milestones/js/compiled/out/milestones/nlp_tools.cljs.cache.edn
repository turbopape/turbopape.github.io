{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name milestones.nlp-tools, :imports nil, :requires {milestones.parser-rules milestones.parser-rules}, :uses {item-significant-value? milestones.parser-rules, rules milestones.parser-rules}, :defs {lexicon {:name milestones.nlp-tools/lexicon, :file "src/milestones/nlp_tools.cljs", :line 6, :column 1, :end-line 6, :end-column 13, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 6, :column 6, :end-line 6, :end-column 13}}, nlp {:name milestones.nlp-tools/nlp, :file "src/milestones/nlp_tools.cljs", :line 4, :column 1, :end-line 4, :end-column 9, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 4, :column 6, :end-line 4, :end-column 9}}, guess-tasks-from-str {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 222, :column 7, :end-line 222, :end-column 27, :arglists (quote ([tasks-str optional-steps]))}, :name milestones.nlp-tools/guess-tasks-from-str, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 27, :method-params ([tasks-str optional-steps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tasks-str optional-steps]))}, parse-tags {:name milestones.nlp-tools/parse-tags, :file "src/milestones/nlp_tools.cljs", :line 173, :column 1, :end-line 173, :end-column 16, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 173, :column 6, :end-line 173, :end-column 16}}, parse-task-w-a-tag-stack {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 95, :column 7, :end-line 95, :end-column 31, :arglists (quote ([sentence init-tag-stack optional-steps]))}, :name milestones.nlp-tools/parse-task-w-a-tag-stack, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 31, :method-params ([sentence init-tag-stack optional-steps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sentence init-tag-stack optional-steps]))}, pos-tags-lexicon {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 24, :column 7, :end-line 24, :end-column 23, :arglists (quote ([lexicon sentence]))}, :name milestones.nlp-tools/pos-tags-lexicon, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 23, :method-params ([lexicon sentence]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lexicon sentence]))}, fast-forward {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 85, :column 7, :end-line 85, :end-column 19, :arglists (quote ([tag-stack])), :doc "Goes FFW in a tag-stack until it finds a step specification. "}, :name milestones.nlp-tools/fast-forward, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 19, :method-params ([tag-stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag-stack])), :doc "Goes FFW in a tag-stack until it finds a step specification. "}, guess-a-task {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 214, :column 7, :end-line 214, :end-column 19, :arglists (quote ([sentence optional-steps]))}, :name milestones.nlp-tools/guess-a-task, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 19, :method-params ([sentence optional-steps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sentence optional-steps]))}, curate-task {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 177, :column 7, :end-line 177, :end-column 18, :arglists (quote ([a-task])), :doc "Curates generated tasks : 1,2,3... => [1 2 3]\n  [d] -> d, [5] -> 5"}, :name milestones.nlp-tools/curate-task, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 18, :method-params ([a-task]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a-task])), :doc "Curates generated tasks : 1,2,3... => [1 2 3]\n  [d] -> d, [5] -> 5"}, accept-tag {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([input-item tag-stack])), :doc "Verifies if an input like: [\"task\" {:Noun true}] correponds to\n  one of the keys stored in the head of tag-stack, which would be an\n  element like #{ :multi #{:Noun Value...}}, or if it is a checkpoint,\n  to notify the caller to construct a part of the task. the :star in a\n  head of stack means that this token can be met multiple times,\n  causing the stack to keep it when ever we find an item corresponding\n  to it, or consuming it an moving forward if the element correspond\n  to the next status."}, :name milestones.nlp-tools/accept-tag, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 17, :method-params ([input-item tag-stack]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input-item tag-stack])), :doc "Verifies if an input like: [\"task\" {:Noun true}] correponds to\n  one of the keys stored in the head of tag-stack, which would be an\n  element like #{ :multi #{:Noun Value...}}, or if it is a checkpoint,\n  to notify the caller to construct a part of the task. the :star in a\n  head of stack means that this token can be met multiple times,\n  causing the stack to keep it when ever we find an item corresponding\n  to it, or consuming it an moving forward if the element correspond\n  to the next status."}, matches? {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 40, :column 7, :end-line 40, :end-column 15, :arglists (quote ([input-item current-tag-alternatives]))}, :name milestones.nlp-tools/matches?, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 15, :method-params ([input-item current-tag-alternatives]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input-item current-tag-alternatives]))}, pos-tags {:name milestones.nlp-tools/pos-tags, :file "src/milestones/nlp_tools.cljs", :line 33, :column 1, :end-line 33, :end-column 14, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 33, :column 6, :end-line 33, :end-column 14}}, parse-tags-rules {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 153, :column 7, :end-line 153, :end-column 23, :arglists (quote ([rules sentence optional-steps])), :doc "Tries to parse the sentence according to rules (tag stacks). If it finds a\n  match, will return it. else, it'll return the errors it found"}, :name milestones.nlp-tools/parse-tags-rules, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 23, :method-params ([rules sentence optional-steps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 3, :fn-var true, :arglists (quote ([rules sentence optional-steps])), :doc "Tries to parse the sentence according to rules (tag stacks). If it finds a\n  match, will return it. else, it'll return the errors it found"}, plural {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/nlp_tools.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([txt]))}, :name milestones.nlp-tools/plural, :variadic false, :file "src/milestones/nlp_tools.cljs", :end-column 13, :method-params ([txt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([txt]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:errors :task-id :duration-unit :tag-stask :default :item :resource-id :milestone-id :duration :predecessors :output :task-name :priority :result :multi :expected :unable-to-parse :error :input :new-stack :items :keywordize-keys :step :is-milestone}, :order [:keywordize-keys :step :new-stack :multi :default :items :error :expected :item :output :result :input :tag-stask :errors :task-id :task-name :resource-id :duration :predecessors :priority :milestone-id :duration-unit :is-milestone :unable-to-parse]}, :doc nil}