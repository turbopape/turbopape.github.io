{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name milestones.graph-utilities, :imports nil, :requires nil, :uses nil, :defs {predecessors-of-task-exist? {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 6, :column 7, :end-line 6, :end-column 34, :arglists (quote ([tasks the-task])), :doc "return true if all predecessors of this task\n  exist or if this task has no preds"}, :name milestones.graph-utilities/predecessors-of-task-exist?, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 34, :method-params ([tasks the-task]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tasks the-task])), :doc "return true if all predecessors of this task\n  exist or if this task has no preds"}, task-has-predecessors? {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 14, :column 7, :end-line 14, :end-column 29, :arglists (quote ([the-task])), :doc "return true if this task has preds"}, :name milestones.graph-utilities/task-has-predecessors?, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 29, :method-params ([the-task]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([the-task])), :doc "return true if this task has preds"}, gen-precendence-edge {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 19, :column 7, :end-line 19, :end-column 27, :arglists (quote ([task-id predecessors])), :doc "a utility function, given 1 + [ 2 3] returns [1 2], [1 3]"}, :name milestones.graph-utilities/gen-precendence-edge, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 27, :method-params ([task-id predecessors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([task-id predecessors])), :doc "a utility function, given 1 + [ 2 3] returns [1 2], [1 3]"}, gen-all-precedence-edges {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 24, :column 7, :end-line 24, :end-column 31, :arglists (quote ([tasks])), :doc "Given tasks, computes all the edges present in this graph"}, :name milestones.graph-utilities/gen-all-precedence-edges, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 31, :method-params ([tasks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tasks])), :doc "Given tasks, computes all the edges present in this graph"}, vertices {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([edges]))}, :name milestones.graph-utilities/vertices, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 15, :method-params ([edges]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([edges]))}, successors {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 37, :column 7, :end-line 37, :end-column 17, :arglists (quote ([vertex edges]))}, :name milestones.graph-utilities/successors, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 17, :method-params ([vertex edges]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vertex edges]))}, graph-cycles {:protocol-inline nil, :meta {:file "/Users/turbopape/work/milestones/src/milestones/graph_utilities.cljc", :line 43, :column 7, :end-line 43, :end-column 19, :arglists (quote ([edges])), :doc "Uses [Tarjan]((https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm)'s\n  strongly connectect components algorithm to find if there are any\n  cycles in a graph"}, :name milestones.graph-utilities/graph-cycles, :variadic false, :file "src/milestones/graph_utilities.cljc", :end-column 19, :method-params ([edges]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([edges])), :doc "Uses [Tarjan]((https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm)'s\n  strongly connectect components algorithm to find if there are any\n  cycles in a graph"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:predecessors}, :order [:predecessors]}, :doc nil}