;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name scheje.tools, :imports nil, :requires {w clojure.walk, clojure.walk clojure.walk, cljs-reader cljs.reader, cljs.reader cljs.reader}, :uses nil, :defs {get-literals {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([syntaxes]))}, :name scheje.tools/get-literals, :variadic false, :file "out/scheje/tools.cljc", :end-column 19, :method-params ([syntaxes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([syntaxes]))}, get-syntax {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 6, :column 7, :end-line 6, :end-column 17, :arglists (quote ([exp syntaxes]))}, :name scheje.tools/get-syntax, :variadic false, :file "out/scheje/tools.cljc", :end-column 17, :method-params ([exp syntaxes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp syntaxes]))}, get-symbols {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 33, :column 7, :end-line 33, :end-column 18, :arglists (quote ([exp]))}, :name scheje.tools/get-symbols, :variadic false, :file "out/scheje/tools.cljc", :end-column 18, :method-params ([exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exp]))}, atom? {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 20, :column 7, :end-line 20, :end-column 12, :arglists (quote ([x]))}, :name scheje.tools/atom?, :variadic false, :file "out/scheje/tools.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, slurp-scm-str {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 149, :column 7, :end-line 149, :end-column 20, :arglists (quote ([input]))}, :name scheje.tools/slurp-scm-str, :variadic false, :file "out/scheje/tools.cljc", :end-column 20, :method-params ([input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input]))}, get-sexps {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 58, :column 7, :end-line 58, :end-column 16, :arglists (quote ([s]))}, :name scheje.tools/get-sexps, :variadic false, :file "out/scheje/tools.cljc", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, is-exp-valid? {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 44, :column 7, :end-line 44, :end-column 20, :arglists (quote ([exp]))}, :name scheje.tools/is-exp-valid?, :variadic false, :file "out/scheje/tools.cljc", :end-column 20, :method-params ([exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exp]))}, is-valid-symbol? {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 28, :column 7, :end-line 28, :end-column 23, :arglists (quote ([s]))}, :name scheje.tools/is-valid-symbol?, :variadic false, :file "out/scheje/tools.cljc", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, rm-comments {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 49, :column 7, :end-line 49, :end-column 18, :arglists (quote ([s]))}, :name scheje.tools/rm-comments, :variadic false, :file "out/scheje/tools.cljc", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, format-eval {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 143, :column 7, :end-line 143, :end-column 18, :arglists (quote ([the-eval]))}, :name scheje.tools/format-eval, :variadic false, :file "out/scheje/tools.cljc", :end-column 18, :method-params ([the-eval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([the-eval]))}, load-prog-from-file {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 155, :column 7, :end-line 155, :end-column 26, :arglists (quote ([f]))}, :name scheje.tools/load-prog-from-file, :variadic false, :file "out/scheje/tools.cljc", :end-column 26, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, sanitize-scm->clj {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 92, :column 7, :end-line 92, :end-column 24, :arglists (quote ([s])), :doc "replace #t, :, /,... into valid clojure strs"}, :name scheje.tools/sanitize-scm->clj, :variadic false, :file "out/scheje/tools.cljc", :end-column 24, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "replace #t, :, /,... into valid clojure strs"}, literal? {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 16, :column 7, :end-line 16, :end-column 15, :arglists (quote ([exp syntaxes]))}, :name scheje.tools/literal?, :variadic false, :file "out/scheje/tools.cljc", :end-column 15, :method-params ([exp syntaxes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp syntaxes]))}, print-clj->scm {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 116, :column 7, :end-line 116, :end-column 21, :arglists (quote ([s])), :doc "replace clojure literals to scheme literals #t, #f, :, @..."}, :name scheje.tools/print-clj->scm, :variadic false, :file "out/scheje/tools.cljc", :end-column 21, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "replace clojure literals to scheme literals #t, #f, :, @..."}, pairlis {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/tools.cljc", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([x y z]))}, :name scheje.tools/pairlis, :variadic false, :file "out/scheje/tools.cljc", :end-column 14, :method-params ([x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x y z]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :literals :name}, :order [:name :literals :else]}, :doc nil}