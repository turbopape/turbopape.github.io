;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name scheje.expander, :imports nil, :requires {unifier scheje.unifier, scheje.unifier scheje.unifier, scheje.tools scheje.tools, w clojure.walk, clojure.walk clojure.walk}, :uses {atom? scheje.tools}, :defs {get-ordered-symbols-for {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/expander.cljc", :line 6, :column 7, :end-line 6, :end-column 30, :arglists (quote ([s a-match])), :doc "returns all symbols beginning with s, ordered "}, :name scheje.expander/get-ordered-symbols-for, :variadic false, :file "out/scheje/expander.cljc", :end-column 30, :method-params ([s a-match]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s a-match])), :doc "returns all symbols beginning with s, ordered "}, get-exp-symbols {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/expander.cljc", :line 14, :column 7, :end-line 14, :end-column 22, :arglists (quote ([exp a-match-symbols]))}, :name scheje.expander/get-exp-symbols, :variadic false, :file "out/scheje/expander.cljc", :end-column 22, :method-params ([exp a-match-symbols]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp a-match-symbols]))}, generate-exp {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/expander.cljc", :line 24, :column 7, :end-line 24, :end-column 19, :arglists (quote ([exp some-matches]))}, :name scheje.expander/generate-exp, :variadic false, :file "out/scheje/expander.cljc", :end-column 19, :method-params ([exp some-matches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp some-matches]))}, repeat-exp {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/expander.cljc", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([exp a-match]))}, :name scheje.expander/repeat-exp, :variadic false, :file "out/scheje/expander.cljc", :end-column 17, :method-params ([exp a-match]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp a-match]))}, expand-exp {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/expander.cljc", :line 58, :column 7, :end-line 58, :end-column 17, :arglists (quote ([exp a-match]))}, :name scheje.expander/expand-exp, :variadic false, :file "out/scheje/expander.cljc", :end-column 17, :method-params ([exp a-match]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp a-match]))}, expand-w-bindings {:protocol-inline nil, :meta {:file "/Users/rafik/work/turbopape.github.io/scheje/out/scheje/expander.cljc", :line 69, :column 7, :end-line 69, :end-column 24, :arglists (quote ([exp a-match]))}, :name scheje.expander/expand-w-bindings, :variadic false, :file "out/scheje/expander.cljc", :end-column 24, :method-params ([exp a-match]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([exp a-match]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{eval in symbol :sym ellipsis some for :error :idx ...}, :order [:idx :sym :error in symbol eval for some ellipsis ...]}, :doc nil}