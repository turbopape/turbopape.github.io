;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name scheje.library, :imports nil, :requires nil, :uses nil, :defs {root-env {:name scheje.library/root-env, :file "out/scheje/library.cljc", :line 3, :column 1, :end-line 4, :end-column 11, :meta {:file "/home/rafik/work/scheje-website/out/scheje/library.cljc", :line 4, :column 3, :end-line 4, :end-column 11}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{x body let-name = < atom? bnext :literals cons y letrec* :name <= * let car null? else > lambda if :rules :keywords bindings - or let* :syntax letrec / >= cond binding cdr + var expr eq? ... and display}, :order [else :keywords :syntax = cond lambda if display cons car cdr null? atom? + - eq? < <= > >= / * :name :literals :rules let body ... var expr let-name letrec bindings let* binding bnext letrec* and x y or]}, :doc nil}